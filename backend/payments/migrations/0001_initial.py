# Generated by Django 5.2.4 on 2025-07-26 09:56

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0002_courseexam_coursereview_examanswer_examcertificate_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentGateway',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('paystack', 'Paystack'), ('flutterwave', 'Flutterwave'), ('stripe', 'Stripe')], max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('public_key', models.CharField(blank=True, max_length=255)),
                ('secret_key', models.CharField(blank=True, max_length=255)),
                ('webhook_secret', models.CharField(blank=True, max_length=255)),
                ('supported_currencies', models.JSONField(default=list, help_text='List of supported currency codes')),
                ('transaction_fee_percentage', models.DecimalField(decimal_places=4, default=0.015, max_digits=5)),
                ('transaction_fee_cap', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supports_transfers', models.BooleanField(default=False)),
                ('transfer_secret_key', models.CharField(blank=True, max_length=500, null=True)),
                ('minimum_transfer_amount', models.DecimalField(decimal_places=2, default=1000.0, max_digits=10)),
            ],
            options={
                'db_table': 'payment_gateways',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_transactions', models.PositiveIntegerField(default=0)),
                ('successful_transactions', models.PositiveIntegerField(default=0)),
                ('failed_transactions', models.PositiveIntegerField(default=0)),
                ('ngn_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('usd_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_revenue_ngn', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_gateway_fees', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_platform_fees', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('net_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('course_enrollments', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'payment_stats',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='InstructorBankAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bank_name', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=20)),
                ('account_name', models.CharField(max_length=100)),
                ('bank_code', models.CharField(max_length=10)),
                ('paystack_recipient_code', models.CharField(blank=True, max_length=100, null=True)),
                ('flutterwave_recipient_id', models.CharField(blank=True, max_length=100, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('instructor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bank_account', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'instructor_bank_accounts',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reference', models.CharField(db_index=True, max_length=100, unique=True)),
                ('gateway_reference', models.CharField(blank=True, help_text="Gateway's transaction reference", max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount in the specified currency', max_digits=12)),
                ('currency', models.CharField(choices=[('NGN', 'Nigerian Naira'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('GHS', 'Ghanaian Cedi'), ('KES', 'Kenyan Shilling'), ('ZAR', 'South African Rand')], default='NGN', max_length=3)),
                ('gateway_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('platform_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, help_text='Amount after fees', max_digits=12)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', max_length=20)),
                ('payment_method', models.CharField(blank=True, help_text='card, bank_transfer, ussd, etc.', max_length=50)),
                ('customer_email', models.EmailField(max_length=254)),
                ('customer_name', models.CharField(blank=True, max_length=255)),
                ('customer_phone', models.CharField(blank=True, max_length=20)),
                ('authorization_code', models.CharField(blank=True, max_length=255)),
                ('card_type', models.CharField(blank=True, max_length=20)),
                ('last_4_digits', models.CharField(blank=True, max_length=4)),
                ('exp_month', models.CharField(blank=True, max_length=2)),
                ('exp_year', models.CharField(blank=True, max_length=4)),
                ('bank', models.CharField(blank=True, max_length=100)),
                ('initiated_at', models.DateTimeField(auto_now_add=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
                ('gateway_response', models.JSONField(blank=True, default=dict)),
                ('failure_reason', models.TextField(blank=True)),
                ('callback_url', models.URLField(blank=True)),
                ('webhook_verified', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='payments.paymentgateway')),
            ],
            options={
                'db_table': 'payments',
                'ordering': ['-initiated_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentRefund',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reference', models.CharField(max_length=100, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('pending_review', 'Pending Review'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('gateway_reference', models.CharField(blank=True, max_length=255)),
                ('gateway_response', models.JSONField(blank=True, default=dict)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('failure_reason', models.TextField(blank=True)),
                ('admin_notes', models.TextField(blank=True)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='payments.payment')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_refunds', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requested_refunds', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'payment_refunds',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentWebhook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(max_length=100)),
                ('reference', models.CharField(db_index=True, max_length=100)),
                ('payload', models.JSONField()),
                ('headers', models.JSONField(blank=True, default=dict)),
                ('processed', models.BooleanField(default=False)),
                ('success', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.paymentgateway')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.payment')),
            ],
            options={
                'db_table': 'payment_webhooks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InstructorPayout',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('instructor_share', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('platform_fee', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('previous_advance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('refund_deductions', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('net_payout', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('minimum_payout', models.DecimalField(decimal_places=2, default=1000, max_digits=12)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('payout_method', models.CharField(default='bank_transfer', max_length=50)),
                ('bank_account', models.JSONField(default=dict)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_number', models.CharField(blank=True, max_length=20, null=True)),
                ('account_name', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_code', models.CharField(blank=True, max_length=10, null=True)),
                ('recipient_code', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('gateway_reference', models.CharField(blank=True, max_length=255)),
                ('gateway_response', models.JSONField(default=dict)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payouts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'instructor_payouts',
                'ordering': ['-created_at'],
                'unique_together': {('instructor', 'period_start', 'period_end')},
            },
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['reference'], name='payments_referen_2b1f06_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['user', 'status'], name='payments_user_id_1b771c_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['course'], name='payments_course__b63348_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status', 'initiated_at'], name='payments_status_7c686a_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['gateway_reference'], name='payments_gateway_e6e27b_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrefund',
            index=models.Index(fields=['user', 'status'], name='payment_ref_user_id_d209d6_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrefund',
            index=models.Index(fields=['payment'], name='payment_ref_payment_c925c3_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrefund',
            index=models.Index(fields=['status'], name='payment_ref_status_393792_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['gateway', 'event_type'], name='payment_web_gateway_debea1_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['reference'], name='payment_web_referen_cf3ee2_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['processed', 'created_at'], name='payment_web_process_79839b_idx'),
        ),
    ]
